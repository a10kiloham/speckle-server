version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.5
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - "--api.insecure=true"
      - "--providers.docker"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"

      # TODO: replace with proper email
      - "--certificatesresolvers.myresolver.acme.email={your@example.com}"

      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

    ports:
      # The HTTP port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  speckle-frontend:
    image: speckle/speckle-frontend:latest
    restart: always
    labels:
      - "traefik.http.routers.speckle-frontend.rule=Host(`{example.com}`)"
      - "traefik.http.routers.speckle-frontend.entrypoints=websecure"
      - "traefik.http.routers.speckle-frontend.tls.certresolver=myresolver"

  speckle-server:
    image: speckle/speckle-server:latest
    restart: always
    environment:
      # TODO: Change this to the URL of the speckle server, as accessed from the network
      CANONICAL_URL: "https://example.com"

      # TODO: Change this to a unique secret for this server
      SESSION_SECRET: "TODO:Replace"

      STRATEGY_LOCAL: "true"
      DEBUG: "speckle:*"

      POSTGRES_URL: "postgres"
      POSTGRES_USER: "speckle"
      POSTGRES_PASSWORD: "speckle"
      POSTGRES_DB: "speckle"

      REDIS_URL: "redis://redis"

  preview-service:
    image: speckle/speckle-preview-service:latest

    restart: always
    mem_limit: "1000m"
    memswap_limit: "1000m"
    environment:
      DEBUG: "preview-service:*"
      PG_CONNECTION_STRING: "postgres://speckle:speckle@postgres/speckle"

  webhook-service:
    image: speckle/speckle-webhook-service:latest
    restart: always
    environment:
      DEBUG: "webhook-service:*"
      PG_CONNECTION_STRING: "postgres://speckle:speckle@postgres/speckle"
